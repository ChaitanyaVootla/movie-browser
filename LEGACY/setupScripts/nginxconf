map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

server {
    server_name     beta.themoviebrowser.com  www.beta.themoviebrowser.com;    # setup your domain here

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass http://127.0.0.1:3001; # set the address of the Node.js instance here
    }
}

map $sent_http_content_type $expires {
    default                    off;
    text/html                  7d;
    text/css                   7d;
    application/javascript     7d;
    ~image/                    max;
    ~font/                     max;
}

server {
    server_name  themoviebrowser.com  www.themoviebrowser.com;
    expires $expires;
    location / {
        root     /movie-browser/dist;
        index    index.html index.htm;
        include  /etc/nginx/mime.types;
        try_files $uri $uri/ /index.html;
    }
    location /node/ {
        rewrite ^/node^/ /$1 break;
        proxy_pass http://localhost:3000/;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/themoviebrowser.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/themoviebrowser.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}